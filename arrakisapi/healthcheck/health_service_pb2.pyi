# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class HealthCheckRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    service: typing___Text = ...

    def __init__(self,
        *,
        service : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"service",b"service"]) -> None: ...
type___HealthCheckRequest = HealthCheckRequest

class HealthCheckResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ServingStatusValue = typing___NewType('ServingStatusValue', builtin___int)
    type___ServingStatusValue = ServingStatusValue
    ServingStatus: _ServingStatus
    class _ServingStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[HealthCheckResponse.ServingStatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(HealthCheckResponse.ServingStatusValue, 0)
        SERVING = typing___cast(HealthCheckResponse.ServingStatusValue, 1)
        NOT_SERVING = typing___cast(HealthCheckResponse.ServingStatusValue, 2)
        SERVICE_UNKNOWN = typing___cast(HealthCheckResponse.ServingStatusValue, 3)
    UNKNOWN = typing___cast(HealthCheckResponse.ServingStatusValue, 0)
    SERVING = typing___cast(HealthCheckResponse.ServingStatusValue, 1)
    NOT_SERVING = typing___cast(HealthCheckResponse.ServingStatusValue, 2)
    SERVICE_UNKNOWN = typing___cast(HealthCheckResponse.ServingStatusValue, 3)
    type___ServingStatus = ServingStatus

    status: type___HealthCheckResponse.ServingStatusValue = ...

    def __init__(self,
        *,
        status : typing___Optional[type___HealthCheckResponse.ServingStatusValue] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> None: ...
type___HealthCheckResponse = HealthCheckResponse
