# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from authzed.api.v1alpha1 import watchresources_service_pb2 as authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2


class WatchResourcesServiceStub(object):
    """WatchResourcesService is used to receive a stream of updates for resources of a
    specific (resource type, permission, subject) combination.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WatchResources = channel.unary_stream(
                '/authzed.api.v1alpha1.WatchResourcesService/WatchResources',
                request_serializer=authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesRequest.SerializeToString,
                response_deserializer=authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesResponse.FromString,
                )


class WatchResourcesServiceServicer(object):
    """WatchResourcesService is used to receive a stream of updates for resources of a
    specific (resource type, permission, subject) combination.
    """

    def WatchResources(self, request, context):
        """WatchResources initiates a watch for permission changes for the provided
        (resource type, permission, subject) pair.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WatchResourcesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WatchResources': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchResources,
                    request_deserializer=authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesRequest.FromString,
                    response_serializer=authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'authzed.api.v1alpha1.WatchResourcesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WatchResourcesService(object):
    """WatchResourcesService is used to receive a stream of updates for resources of a
    specific (resource type, permission, subject) combination.
    """

    @staticmethod
    def WatchResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/authzed.api.v1alpha1.WatchResourcesService/WatchResources',
            authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesRequest.SerializeToString,
            authzed_dot_api_dot_v1alpha1_dot_watchresources__service__pb2.WatchResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
