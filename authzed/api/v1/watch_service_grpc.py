# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: authzed/api/v1/watch_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import validate.validate_pb2
import authzed.api.v1.core_pb2
import authzed.api.v1.watch_service_pb2


class WatchServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Watch(self, stream: 'grpclib.server.Stream[authzed.api.v1.watch_service_pb2.WatchRequest, authzed.api.v1.watch_service_pb2.WatchResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/authzed.api.v1.WatchService/Watch': grpclib.const.Handler(
                self.Watch,
                grpclib.const.Cardinality.UNARY_STREAM,
                authzed.api.v1.watch_service_pb2.WatchRequest,
                authzed.api.v1.watch_service_pb2.WatchResponse,
            ),
        }


class WatchServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Watch = grpclib.client.UnaryStreamMethod(
            channel,
            '/authzed.api.v1.WatchService/Watch',
            authzed.api.v1.watch_service_pb2.WatchRequest,
            authzed.api.v1.watch_service_pb2.WatchResponse,
        )
