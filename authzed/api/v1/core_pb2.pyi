"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Relationship(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    RELATION_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    relation: typing.Text = ...

    @property
    def resource(self) -> global___ObjectReference: ...

    @property
    def subject(self) -> global___SubjectReference: ...

    def __init__(self,
        *,
        resource : typing.Optional[global___ObjectReference] = ...,
        relation : typing.Text = ...,
        subject : typing.Optional[global___SubjectReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"resource",b"resource",u"subject",b"subject"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"relation",b"relation",u"resource",b"resource",u"subject",b"subject"]) -> None: ...
global___Relationship = Relationship

class SubjectReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECT_FIELD_NUMBER: builtins.int
    OPTIONAL_RELATION_FIELD_NUMBER: builtins.int
    optional_relation: typing.Text = ...

    @property
    def object(self) -> global___ObjectReference: ...

    def __init__(self,
        *,
        object : typing.Optional[global___ObjectReference] = ...,
        optional_relation : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"object",b"object"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"object",b"object",u"optional_relation",b"optional_relation"]) -> None: ...
global___SubjectReference = SubjectReference

class ObjectReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OBJECT_TYPE_FIELD_NUMBER: builtins.int
    OBJECT_ID_FIELD_NUMBER: builtins.int
    object_type: typing.Text = ...
    object_id: typing.Text = ...

    def __init__(self,
        *,
        object_type : typing.Text = ...,
        object_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"object_id",b"object_id",u"object_type",b"object_type"]) -> None: ...
global___ObjectReference = ObjectReference

class ZedToken(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOKEN_FIELD_NUMBER: builtins.int
    token: typing.Text = ...

    def __init__(self,
        *,
        token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"token",b"token"]) -> None: ...
global___ZedToken = ZedToken

class RelationshipUpdate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Operation(metaclass=_Operation):
        V = typing.NewType('V', builtins.int)

    OPERATION_UNSPECIFIED = RelationshipUpdate.Operation.V(0)
    OPERATION_CREATE = RelationshipUpdate.Operation.V(1)
    OPERATION_TOUCH = RelationshipUpdate.Operation.V(2)
    OPERATION_DELETE = RelationshipUpdate.Operation.V(3)

    class _Operation(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Operation.V], builtins.type):  # type: ignore
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        OPERATION_UNSPECIFIED = RelationshipUpdate.Operation.V(0)
        OPERATION_CREATE = RelationshipUpdate.Operation.V(1)
        OPERATION_TOUCH = RelationshipUpdate.Operation.V(2)
        OPERATION_DELETE = RelationshipUpdate.Operation.V(3)

    OPERATION_FIELD_NUMBER: builtins.int
    RELATIONSHIP_FIELD_NUMBER: builtins.int
    operation: global___RelationshipUpdate.Operation.V = ...

    @property
    def relationship(self) -> global___Relationship: ...

    def __init__(self,
        *,
        operation : global___RelationshipUpdate.Operation.V = ...,
        relationship : typing.Optional[global___Relationship] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"relationship",b"relationship"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"operation",b"operation",u"relationship",b"relationship"]) -> None: ...
global___RelationshipUpdate = RelationshipUpdate

class PermissionRelationshipTree(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERMEDIATE_FIELD_NUMBER: builtins.int
    LEAF_FIELD_NUMBER: builtins.int
    EXPANDED_OBJECT_FIELD_NUMBER: builtins.int
    EXPANDED_RELATION_FIELD_NUMBER: builtins.int
    expanded_relation: typing.Text = ...

    @property
    def intermediate(self) -> global___AlgebraicSubjectSet: ...

    @property
    def leaf(self) -> global___DirectSubjectSet: ...

    @property
    def expanded_object(self) -> global___ObjectReference: ...

    def __init__(self,
        *,
        intermediate : typing.Optional[global___AlgebraicSubjectSet] = ...,
        leaf : typing.Optional[global___DirectSubjectSet] = ...,
        expanded_object : typing.Optional[global___ObjectReference] = ...,
        expanded_relation : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"expanded_object",b"expanded_object",u"intermediate",b"intermediate",u"leaf",b"leaf",u"tree_type",b"tree_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"expanded_object",b"expanded_object",u"expanded_relation",b"expanded_relation",u"intermediate",b"intermediate",u"leaf",b"leaf",u"tree_type",b"tree_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"tree_type",b"tree_type"]) -> typing.Optional[typing_extensions.Literal["intermediate","leaf"]]: ...
global___PermissionRelationshipTree = PermissionRelationshipTree

class AlgebraicSubjectSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Operation(metaclass=_Operation):
        V = typing.NewType('V', builtins.int)

    OPERATION_UNSPECIFIED = AlgebraicSubjectSet.Operation.V(0)
    OPERATION_UNION = AlgebraicSubjectSet.Operation.V(1)
    OPERATION_INTERSECTION = AlgebraicSubjectSet.Operation.V(2)
    OPERATION_EXCLUSION = AlgebraicSubjectSet.Operation.V(3)

    class _Operation(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Operation.V], builtins.type):  # type: ignore
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        OPERATION_UNSPECIFIED = AlgebraicSubjectSet.Operation.V(0)
        OPERATION_UNION = AlgebraicSubjectSet.Operation.V(1)
        OPERATION_INTERSECTION = AlgebraicSubjectSet.Operation.V(2)
        OPERATION_EXCLUSION = AlgebraicSubjectSet.Operation.V(3)

    OPERATION_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    operation: global___AlgebraicSubjectSet.Operation.V = ...

    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PermissionRelationshipTree]: ...

    def __init__(self,
        *,
        operation : global___AlgebraicSubjectSet.Operation.V = ...,
        children : typing.Optional[typing.Iterable[global___PermissionRelationshipTree]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"children",b"children",u"operation",b"operation"]) -> None: ...
global___AlgebraicSubjectSet = AlgebraicSubjectSet

class DirectSubjectSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBJECTS_FIELD_NUMBER: builtins.int

    @property
    def subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectReference]: ...

    def __init__(self,
        *,
        subjects : typing.Optional[typing.Iterable[global___SubjectReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"subjects",b"subjects"]) -> None: ...
global___DirectSubjectSet = DirectSubjectSet
