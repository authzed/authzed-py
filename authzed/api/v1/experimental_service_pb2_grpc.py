# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from authzed.api.v1 import experimental_service_pb2 as authzed_dot_api_dot_v1_dot_experimental__service__pb2


class ExperimentalServiceStub(object):
    """ExperimentalService exposes a number of APIs that are currently being
    prototyped and tested for future inclusion in the stable API.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BulkImportRelationships = channel.stream_unary(
                '/authzed.api.v1.ExperimentalService/BulkImportRelationships',
                request_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsRequest.SerializeToString,
                response_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsResponse.FromString,
                )
        self.BulkExportRelationships = channel.unary_stream(
                '/authzed.api.v1.ExperimentalService/BulkExportRelationships',
                request_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsRequest.SerializeToString,
                response_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsResponse.FromString,
                )
        self.BulkCheckPermission = channel.unary_unary(
                '/authzed.api.v1.ExperimentalService/BulkCheckPermission',
                request_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionRequest.SerializeToString,
                response_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionResponse.FromString,
                )


class ExperimentalServiceServicer(object):
    """ExperimentalService exposes a number of APIs that are currently being
    prototyped and tested for future inclusion in the stable API.
    """

    def BulkImportRelationships(self, request_iterator, context):
        """BulkImportRelationships is a faster path to writing a large number of
        relationships at once. It is both batched and streaming. For maximum
        performance, the caller should attempt to write relationships in as close
        to relationship sort order as possible: (resource.object_type,
        resource.object_id, relation, subject.object.object_type,
        subject.object.object_id, subject.optional_relation)

        EXPERIMENTAL
        https://github.com/authzed/spicedb/issues/1303
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkExportRelationships(self, request, context):
        """BulkExportRelationships is the fastest path available to exporting
        relationships from the server. It is resumable, and will return results
        in an order determined by the server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkCheckPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BulkImportRelationships': grpc.stream_unary_rpc_method_handler(
                    servicer.BulkImportRelationships,
                    request_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsRequest.FromString,
                    response_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsResponse.SerializeToString,
            ),
            'BulkExportRelationships': grpc.unary_stream_rpc_method_handler(
                    servicer.BulkExportRelationships,
                    request_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsRequest.FromString,
                    response_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsResponse.SerializeToString,
            ),
            'BulkCheckPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkCheckPermission,
                    request_deserializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionRequest.FromString,
                    response_serializer=authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'authzed.api.v1.ExperimentalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentalService(object):
    """ExperimentalService exposes a number of APIs that are currently being
    prototyped and tested for future inclusion in the stable API.
    """

    @staticmethod
    def BulkImportRelationships(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/authzed.api.v1.ExperimentalService/BulkImportRelationships',
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsRequest.SerializeToString,
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkImportRelationshipsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkExportRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/authzed.api.v1.ExperimentalService/BulkExportRelationships',
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsRequest.SerializeToString,
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkExportRelationshipsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkCheckPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authzed.api.v1.ExperimentalService/BulkCheckPermission',
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionRequest.SerializeToString,
            authzed_dot_api_dot_v1_dot_experimental__service__pb2.BulkCheckPermissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
