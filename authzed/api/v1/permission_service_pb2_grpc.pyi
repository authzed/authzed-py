"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import typing

from .permission_service_pb2 import *
class PermissionsServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    ReadRelationships:grpc.UnaryStreamMultiCallable[
        global___ReadRelationshipsRequest,
        global___ReadRelationshipsResponse] = ...

    WriteRelationships:grpc.UnaryUnaryMultiCallable[
        global___WriteRelationshipsRequest,
        global___WriteRelationshipsResponse] = ...

    DeleteRelationships:grpc.UnaryUnaryMultiCallable[
        global___DeleteRelationshipsRequest,
        global___DeleteRelationshipsResponse] = ...

    CheckPermission:grpc.UnaryUnaryMultiCallable[
        global___CheckPermissionRequest,
        global___CheckPermissionResponse] = ...

    ExpandPermissionTree:grpc.UnaryUnaryMultiCallable[
        global___ExpandPermissionTreeRequest,
        global___ExpandPermissionTreeResponse] = ...

    LookupResources:grpc.UnaryStreamMultiCallable[
        global___LookupResourcesRequest,
        global___LookupResourcesResponse] = ...


class PermissionsServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ReadRelationships(self,
        request: global___ReadRelationshipsRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[global___ReadRelationshipsResponse]: ...

    @abc.abstractmethod
    def WriteRelationships(self,
        request: global___WriteRelationshipsRequest,
        context: grpc.ServicerContext,
    ) -> global___WriteRelationshipsResponse: ...

    @abc.abstractmethod
    def DeleteRelationships(self,
        request: global___DeleteRelationshipsRequest,
        context: grpc.ServicerContext,
    ) -> global___DeleteRelationshipsResponse: ...

    @abc.abstractmethod
    def CheckPermission(self,
        request: global___CheckPermissionRequest,
        context: grpc.ServicerContext,
    ) -> global___CheckPermissionResponse: ...

    @abc.abstractmethod
    def ExpandPermissionTree(self,
        request: global___ExpandPermissionTreeRequest,
        context: grpc.ServicerContext,
    ) -> global___ExpandPermissionTreeResponse: ...

    @abc.abstractmethod
    def LookupResources(self,
        request: global___LookupResourcesRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[global___LookupResourcesResponse]: ...


def add_PermissionsServiceServicer_to_server(servicer: PermissionsServiceServicer, server: grpc.Server) -> None: ...
